version: '1'
services:  
  staging_db:
    image: postgres:latest
    container_name: staging_db
    environment:
      POSTGRES_USER: ${SOURCE_DB_USER}
      POSTGRES_PASSWORD: ${SOURCE_DB_PASSWORD}
      POSTGRES_DB: ${SOURCE_STG_NAME}
    ports:
      - 5434:5432
    volumes:
      - ./init/stg:/docker-entrypoint-initdb.d
      - staging_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${SOURCE_DB_USER}"]
      interval: 5s
    restart: always
    networks:
      - airflow-networks

  warehouse_db:
    image: postgres:latest
    container_name: warehouse_db
    environment:
      POSTGRES_USER: ${SOURCE_DB_USER}
      POSTGRES_PASSWORD: ${SOURCE_DB_PASSWORD}
      POSTGRES_DB: ${SOURCE_DB_NAME}
    ports:
      - 5436:5432
    volumes:
      - ./init/dwh:/docker-entrypoint-initdb.d
      - warehouse_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${SOURCE_DB_USER}"]
      interval: 5s
    restart: always
    networks:
      - airflow-networks


volumes:
  warehouse_db:
    driver: local
    name: warehouse_db
  staging_db:
    driver: local
    name: staging_db

networks:
  airflow-networks:
    external: True